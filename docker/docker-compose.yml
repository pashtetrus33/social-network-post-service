services:
  postgres:
    image: postgres:16.2-alpine
    container_name: postgres
    restart: always
    ports:
      - "5432:5432"
    env_file:
      - .env
    volumes:
      - ./init-multi-postgres-databases.sh:/docker-entrypoint-initdb.d/init-multi-postgres-databases.sh
      - database-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
    networks:
      - app-network

  redis:
    image: redis:7.0.12
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - app-network

  redisinsight:
    image: redislabs/redisinsight:1.14.0
    container_name: redisinsight
    restart: always
    ports:
      - "8001:8001"
    environment:
      - REDISINSIGHT_PORT=8001
    networks:
      - app-network
    depends_on:
      - redis

  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.0
    container_name: zookeeper
    restart: always
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - app-network
    depends_on:
      - postgres

  kafka:
    image: wurstmeister/kafka:2.13-2.6.3
    container_name: kafka
    restart: always
    ports:
      - "9092:9092"
      - "9094:9094"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://localhost:9094
      KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
    volumes:
      - kafka:/data
    networks:
      - app-network
    depends_on:
      - postgres
      - zookeeper

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    restart: always
    ports:
      - "9999:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
    networks:
      - app-network
    depends_on:
      - kafka

  discovery-service:
    image: pashtet33/discovery-service:latest
    container_name: discovery-service
    restart: always
    ports:
      - "8761:8761"
    networks:
      - app-network
    depends_on:
      - kafka

  config-service:
    image: pashtet33/config-service:latest
    container_name: config-service
    restart: always
    ports:
      - "8888:8888"
    networks:
      - app-network
    depends_on:
      - discovery-service

  gateway-service:
    image: pashtet33/gateway-service:latest
    container_name: gateway-service
    restart: always
    ports:
      - "8080:8080"
    networks:
      - app-network
    depends_on:
      - config-service

volumes:
  database-data:
  kafka:

networks:
  app-network:
    driver: bridge